/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import Entidades.Habilidad;
import Entidades.Rol;
import Entidades.Usuario;
import Entidades.Usuario_;
import Negocio.SeguridadController;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ema
 */
public class AltaDeUsuario extends javax.swing.JFrame {

    /**
     * Creates new form AltaDeUsuario
     */
    public AltaDeUsuario() {

        AparienciaPantalla apa = new AparienciaPantalla();
        apa.cambiarApariencia("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        initComponents();
        apellidojTextField2.requestFocus();
        cargarRoles();
        cargarHabilidades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UsuariojLabel = new javax.swing.JLabel();
        nombrejTextField1 = new javax.swing.JTextField();
        PassjLabel = new javax.swing.JLabel();
        RepitaPassjLabel = new javax.swing.JLabel();
        TipoUsuariojLabel = new javax.swing.JLabel();
        roljComboBox1 = new javax.swing.JComboBox();
        PrivilegiosjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        habilidadesjTable1 = new javax.swing.JTable();
        GuardarjButton = new javax.swing.JButton();
        SalirjButton = new javax.swing.JButton();
        Bayuda = new javax.swing.JButton();
        UsuariojLabel1 = new javax.swing.JLabel();
        apellidojTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nombreUsuariojTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        emailjTextField2 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar un nuevo usuario");
        setExtendedState(AltaDeUsuario.MAXIMIZED_BOTH);

        UsuariojLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        UsuariojLabel.setText("Nombre");

        nombrejTextField1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        PassjLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PassjLabel.setText("Contraseña");

        RepitaPassjLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        RepitaPassjLabel.setText("Repetir contraseña");

        TipoUsuariojLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        TipoUsuariojLabel.setText("Rol");

        roljComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roljComboBox1ItemStateChanged(evt);
            }
        });

        PrivilegiosjLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PrivilegiosjLabel.setText("Habilidades");

        habilidadesjTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        habilidadesjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Habilidad", "Fecha de Alta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(habilidadesjTable1);
        if (habilidadesjTable1.getColumnModel().getColumnCount() > 0) {
            habilidadesjTable1.getColumnModel().getColumn(0).setMinWidth(60);
            habilidadesjTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
            habilidadesjTable1.getColumnModel().getColumn(0).setMaxWidth(60);
            habilidadesjTable1.getColumnModel().getColumn(1).setMinWidth(467);
            habilidadesjTable1.getColumnModel().getColumn(1).setPreferredWidth(467);
            habilidadesjTable1.getColumnModel().getColumn(1).setMaxWidth(467);
            habilidadesjTable1.getColumnModel().getColumn(2).setMinWidth(90);
            habilidadesjTable1.getColumnModel().getColumn(2).setPreferredWidth(90);
            habilidadesjTable1.getColumnModel().getColumn(2).setMaxWidth(90);
        }

        GuardarjButton.setText("Guardar");
        GuardarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarjButtonActionPerformed(evt);
            }
        });

        SalirjButton.setText("Cancelar");
        SalirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirjButtonActionPerformed(evt);
            }
        });

        Bayuda.setText("Ayuda");

        UsuariojLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        UsuariojLabel1.setText("Apellido");

        apellidojTextField2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabel1.setText("Nombre de Usuario");

        jLabel2.setText("Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PrivilegiosjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roljComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(UsuariojLabel1)
                                    .addComponent(PassjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nombreUsuariojTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(TipoUsuariojLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPasswordField1)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(apellidojTextField2))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nombrejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(UsuariojLabel)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailjTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RepitaPassjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(160, 160, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Bayuda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(GuardarjButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SalirjButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsuariojLabel)
                    .addComponent(UsuariojLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombrejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidojTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailjTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RepitaPassjLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombreUsuariojTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PassjLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addComponent(TipoUsuariojLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roljComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PrivilegiosjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bayuda)
                    .addComponent(SalirjButton)
                    .addComponent(GuardarjButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GuardarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarjButtonActionPerformed
        // TODO add your handling code here:
        SeguridadController controller = new SeguridadController();
        if (validar()) {
            try {
                Usuario usuario = new Usuario();
                usuario.setApellido(apellidojTextField2.getText());
                usuario.setNombre(nombrejTextField1.getText());
                usuario.setNombreusuario(nombreUsuariojTextField1.getText());
                usuario.setEmail(emailjTextField2.getText());
                usuario.setPassusuario(new String(jPasswordField1.getPassword()));
                Rol rol = controller.obtenerRol(roljComboBox1.getSelectedItem().toString());
                usuario.setRolIDROL(rol);
                usuario.setFechacreacion(new java.sql.Date(new Date().getTime()));
                if (controller.guardarActualizarUsuario(usuario)) {
                    JOptionPane.showMessageDialog(null, "El usuario a sido creado exitosamente!");
                    this.dispose();
                }
            } catch (Exception ex) {
                Logger.getLogger(AltaDeUsuario.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_GuardarjButtonActionPerformed

    private void SalirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirjButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_SalirjButtonActionPerformed

    private void roljComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roljComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (roljComboBox1.getSelectedIndex() != 0) {
            cargarHabilidades();
        }
    }//GEN-LAST:event_roljComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaDeUsuario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaDeUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bayuda;
    private javax.swing.JButton GuardarjButton;
    private javax.swing.JLabel PassjLabel;
    private javax.swing.JLabel PrivilegiosjLabel;
    private javax.swing.JLabel RepitaPassjLabel;
    private javax.swing.JButton SalirjButton;
    private javax.swing.JLabel TipoUsuariojLabel;
    private javax.swing.JLabel UsuariojLabel;
    private javax.swing.JLabel UsuariojLabel1;
    private javax.swing.JTextField apellidojTextField2;
    private javax.swing.JTextField emailjTextField2;
    private javax.swing.JTable habilidadesjTable1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreUsuariojTextField1;
    private javax.swing.JTextField nombrejTextField1;
    private javax.swing.JComboBox roljComboBox1;
    // End of variables declaration//GEN-END:variables

    private boolean validar() {
        boolean valido = true;
        if (apellidojTextField2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha ingresado su apellido");
            apellidojTextField2.requestFocus();
            valido = false;
        } else if (nombrejTextField1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha ingresado su nombre");
            nombrejTextField1.requestFocus();
            valido = false;
        } else if (nombreUsuariojTextField1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha ingresado su nombre de usuario");
            nombreUsuariojTextField1.requestFocus();
            valido = false;
        } else if (emailjTextField2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha ingresado su email");
            nombrejTextField1.requestFocus();
            valido = false;
        } else if (jPasswordField1.getPassword().length < 4 || jPasswordField1.getPassword().length > 12) {
            JOptionPane.showMessageDialog(null, "La contraseña debe tener entre 4 y 12 caracteres");
            jPasswordField1.requestFocus();
            valido = false;
        } else if (!Arrays.equals(jPasswordField1.getPassword(), jPasswordField2.getPassword())) {
            JOptionPane.showMessageDialog(null, "Las contraseñas tienen que ser iguales");
            jPasswordField2.requestFocus();
            valido = false;
        }
        return valido;
    }

    private void cargarRoles() {
        try {
            List<Rol> roles = new SeguridadController().listarRoles();
            if (!roles.isEmpty()) {
                for (int i = 0; i < roles.size(); i++) {
                    roljComboBox1.addItem(roles.get(i).getRol());
                    roljComboBox1.setSelectedItem(roles.get(i).getIdrol());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void cargarHabilidades() {
        DefaultTableModel tabla = (DefaultTableModel) habilidadesjTable1.getModel();
        try {
            Rol rol = new SeguridadController().obtenerRol(roljComboBox1.getSelectedItem().toString());
            int dimension = rol.getHabilidadCollection().size();
            Habilidad[] habilidades = rol.getHabilidadCollection().toArray(new Habilidad[dimension]);
            Object[] columnas = new Object[3];
            for (int i = 0; i < habilidades.length; i++) {
                columnas[0] = habilidades[i].getIdhabilidad();
                columnas[1] = habilidades[i].getHabilidad();
                columnas[2] = new SimpleDateFormat("dd-MM-yyyy").format(habilidades[i].getFechaalta());
                tabla.addRow(columnas);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
}
